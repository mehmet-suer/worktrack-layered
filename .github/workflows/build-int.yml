name: Build & Deploy to GKE (Docker Hub)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  APP_NAME: worktrack-layered
  NAMESPACE: worktrack-layered
  IMAGE_REPO: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/worktrack-layered

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: gke-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # ---------- Build & Test ----------
      - name: Build (unit)
        run: ./gradlew clean build -x test -Dspring.profiles.active=int --no-daemon

      - name: Run integration tests
        run: ./gradlew :integration-test:test --no-daemon

      # ---------- Docker (Docker Hub) ----------
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push image (Docker Hub)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ---------- GCP Auth (OIDC) + K8s Deploy ----------
      - name: Auth to Google Cloud (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Ensure namespace exists
        run: kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

      - name: Install envsubst
        run: sudo apt-get update && sudo apt-get install -y gettext-base

      - name: Apply deployment (with envsubst)
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          envsubst < k8s/deployment-int.yml | kubectl apply -n $NAMESPACE -f -

      - name: Wait rollout
        run: kubectl rollout status deployment/${APP_NAME} -n $NAMESPACE --timeout=600s